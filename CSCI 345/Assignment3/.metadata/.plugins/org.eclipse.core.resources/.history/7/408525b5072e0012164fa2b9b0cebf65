package cs345evansz2;

import java.io.*;
import java.util.*;


public class CommandInterp {
	
	private BufferedReader reader;
	private PrintStream stream;
	private boolean exit;
	private String readString;
	private List <String> wordList = new ArrayList<String>();
	private List <Word> validWords = new ArrayList<Word>();


	CommandInterp(BufferedReader inReader, PrintStream inStream){
		
		GameGlobals.messageOut = inStream;
		reader = inReader;
		stream = inStream;
		exit = false;
		
	}
	
	public void setExit(boolean exitBool){
		exit = exitBool;
	}
	
	
	public void run(){
		while (!exit){
			
			try {
				readString = reader.readLine();
			} catch (IOException e) {
				stream.print("Input error");
				continue;
			}	
			
			 
			wordList = GameUtil.canonicalCommand(readString);
			
			
			if (wordList.size() == 2 || wordList.size() == 1){ // 1 or 2 arguments
				
				for (String s : wordList){
					int numMatches = 0;
					Word tempWord = new Word("", MatchType.NONE);
					numMatches = 0;
					for (Word w: GameGlobals.allWords){
						if (GameUtil.isPrefixMatch(s, w)){
							numMatches++;
							tempWord = w;
							
						}
						
					}
					if (numMatches == 1){ //Only one word matched
						validWords.add(tempWord); //Add to validWords
					}
					else if(numMatches > 1){
						stream.printf("Too many matches for \"%s\".", s);
					}
				}
				
			}
			else if (wordList.size() > 2){ // Too many arguments
				stream.println("Too many words.");
				
				continue;
			}
			
			
			if (validWords.size() == wordList.size()){ //All words are valid
					for (Action a: GameGlobals.allActions){
						for (Word w: a.vocab1.getWordList()){
								
							if (w == validWords.get(1)){
								if (validWords.size() == 1){
									a.doAction();
								}
								else if (validWords.size() == 2){
									a.doAction(validWords.get(1), validWords.get(2));
								}
							}
						}
					}
				
				
				
				
			}
			else{
				stream.println("Not all words valid.");
				continue;
			}
			
			
			
			
			
		}
			
		
	}
	
	
}
